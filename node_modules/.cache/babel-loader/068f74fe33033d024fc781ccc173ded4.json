{"ast":null,"code":"import _objectSpread from\"/Users/ernesturzua/Desktop/clicky-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/ernesturzua/Desktop/clicky-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ernesturzua/Desktop/clicky-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ernesturzua/Desktop/clicky-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ernesturzua/Desktop/clicky-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./main.css\";import Img from\"../images.json\";import Cards from\"../components/Cards\";var Main=/*#__PURE__*/function(_Component){_inherits(Main,_Component);var _super=_createSuper(Main);function Main(){var _this;_classCallCheck(this,Main);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={score:0,topScore:0,Img:Img,//array of all imgs from json file\nclicked:false};_this.shuffleIndex=function(){var rand=0;//shuffle indexs  \nfor(var i=Img.length-1;i>0;i--){//apply logic here\nrand=Math.floor(Math.random()*(i+1));var _ref=[Img[rand],Img[i]];Img[i]=_ref[0];Img[rand]=_ref[1];}};_this.handleItemClick=function(event){var id=event.target.id;//select the id of the picture clicked\nconsole.log(\"Clicked ID:\"+id);var newState=_objectSpread({},_this.state);//temp variable to hold our state info\nif(Img[id-1].clicked===false){Img[id-1].clicked=true;//set to true when img is clicked\nnewState.score++;//add a point to score\nconsole.log(\"add point\");console.log(Img);}//restart and clear fields\nelse{if(_this.state.score>_this.state.topScore){newState.topScore=_this.state.score;//make current score the top score\n}newState.score=0;//set score back to 0\n//reset clicked flags to false\nfor(var i=0;i<Img.length;i++){Img[i].clicked=false;}console.log(\"Game Restart\");//console.log(Img)\n}//update state variables\n_this.setState(newState);console.log(\"setting the newState\");_this.shuffleIndex();};return _this;}_createClass(Main,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"m-3\"},/*#__PURE__*/React.createElement(\"p\",null,\"Choose a Card to Play\"),/*#__PURE__*/React.createElement(\"div\",{className:\"text-right\"},/*#__PURE__*/React.createElement(\"span\",null,\"Score:\",this.state.score,\" High Score:\",this.state.topScore))),/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid p-2 col-9 justify-content-center\"},/* Loop through all the items in the static list  */ //component did mount\nthis.state.Img.map(function(item){return/*#__PURE__*/React.createElement(Cards,{key:item.id,id:item.id,name:item.name,handleClick:_this2.handleItemClick,image:item.image});})));}}]);return Main;}(Component);export default Main;","map":{"version":3,"sources":["/Users/ernesturzua/Desktop/clicky-game/src/pages/Main.js"],"names":["React","Component","Img","Cards","Main","state","score","topScore","clicked","shuffleIndex","rand","i","length","Math","floor","random","handleItemClick","event","id","target","console","log","newState","setState","map","item","name","image"],"mappings":"gwBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,gBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,GAGMC,CAAAA,I,mTAEJC,K,CAAQ,CACNC,KAAK,CAAE,CADD,CAENC,QAAQ,CAAE,CAFJ,CAGNL,GAAG,CAAHA,GAHM,CAGD;AACLM,OAAO,CAAE,KAJH,C,OAQRC,Y,CAAe,UAAM,CAEnB,GAAIC,CAAAA,IAAI,CAAG,CAAX,CACA;AACA,IAAK,GAAIC,CAAAA,CAAC,CAAGT,GAAG,CAACU,MAAJ,CAAa,CAA1B,CAA6BD,CAAC,CAAG,CAAjC,CAAoCA,CAAC,EAArC,CAAyC,CACvC;AACAD,IAAI,CAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBJ,CAAC,CAAG,CAArB,CAAX,CAAP,CAFuC,SAGjB,CAACT,GAAG,CAACQ,IAAD,CAAJ,CAAYR,GAAG,CAACS,CAAD,CAAf,CAHiB,CAGtCT,GAAG,CAACS,CAAD,CAHmC,SAG9BT,GAAG,CAACQ,IAAD,CAH2B,SAIxC,CACF,C,OAGDM,e,CAAkB,SAAAC,KAAK,CAAI,CACzB,GAAMC,CAAAA,EAAE,CAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB,CAA2B;AAC3BE,OAAO,CAACC,GAAR,CAAY,cAAgBH,EAA5B,EACA,GAAMI,CAAAA,QAAQ,kBAAQ,MAAKjB,KAAb,CAAd,CAAoC;AAGpC,GAAIH,GAAG,CAACgB,EAAE,CAAG,CAAN,CAAH,CAAYV,OAAZ,GAAwB,KAA5B,CAAmC,CACjCN,GAAG,CAACgB,EAAE,CAAG,CAAN,CAAH,CAAYV,OAAZ,CAAsB,IAAtB,CAA4B;AAC5Bc,QAAQ,CAAChB,KAAT,GAAkB;AAClBc,OAAO,CAACC,GAAR,CAAY,WAAZ,EACAD,OAAO,CAACC,GAAR,CAAYnB,GAAZ,EACD,CAED;AAPA,IAQK,CACH,GAAI,MAAKG,KAAL,CAAWC,KAAX,CAAmB,MAAKD,KAAL,CAAWE,QAAlC,CAA4C,CAC1Ce,QAAQ,CAACf,QAAT,CAAoB,MAAKF,KAAL,CAAWC,KAA/B,CAAqC;AACtC,CAEDgB,QAAQ,CAAChB,KAAT,CAAiB,CAAjB,CAAoB;AAEpB;AACA,IAAK,GAAIK,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGT,GAAG,CAACU,MAAxB,CAAgCD,CAAC,EAAjC,CAAqC,CACnCT,GAAG,CAACS,CAAD,CAAH,CAAOH,OAAP,CAAiB,KAAjB,CACD,CAEDY,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA;AACD,CAED;AACA,MAAKE,QAAL,CAAcD,QAAd,EACAF,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACA,MAAKZ,YAAL,GACD,C,uEAGQ,iBACP,mBACE,4CACE,2BAAK,SAAS,CAAC,KAAf,eACE,qDADF,cAEE,2BAAK,SAAS,CAAC,YAAf,eACE,yCAAa,KAAKJ,KAAL,CAAWC,KAAxB,gBAA2C,KAAKD,KAAL,CAAWE,QAAtD,CADF,CAFF,CADF,cAQE,2BAAK,SAAS,CAAC,kDAAf,EAEI,oDAFJ,CAGI;AACA,KAAKF,KAAL,CAAWH,GAAX,CAAesB,GAAf,CAAmB,SAAAC,IAAI,qBACrB,oBAAC,KAAD,EACE,GAAG,CAAEA,IAAI,CAACP,EADZ,CAEE,EAAE,CAAEO,IAAI,CAACP,EAFX,CAGE,IAAI,CAAEO,IAAI,CAACC,IAHb,CAIE,WAAW,CAAE,MAAI,CAACV,eAJpB,CAKE,KAAK,CAAES,IAAI,CAACE,KALd,EADqB,EAAvB,CAJJ,CARF,CADF,CA0BD,C,kBAtFgB1B,S,EAyFnB,cAAeG,CAAAA,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./main.css\";\nimport Img from \"../images.json\";\nimport Cards from \"../components/Cards\";\n\n\nclass Main extends Component {\n  //holds our game information\n  state = {\n    score: 0,\n    topScore: 0,\n    Img, //array of all imgs from json file\n    clicked: false\n  };\n\n  //function that shuffles indexs\n  shuffleIndex = () => {\n\n    var rand = 0;\n    //shuffle indexs  \n    for (let i = Img.length - 1; i > 0; i--) {\n      //apply logic here\n      rand = Math.floor(Math.random() * (i + 1));\n      [Img[i], Img[rand]] = [Img[rand], Img[i]];\n    }\n  }\n\n  //handles the click on the pictures\n  handleItemClick = event => {\n    const id = event.target.id;//select the id of the picture clicked\n    console.log(\"Clicked ID:\" + id);\n    const newState = { ...this.state }; //temp variable to hold our state info\n\n\n    if (Img[id - 1].clicked === false) {\n      Img[id - 1].clicked = true; //set to true when img is clicked\n      newState.score++; //add a point to score\n      console.log(\"add point\");\n      console.log(Img);\n    }\n\n    //restart and clear fields\n    else {\n      if (this.state.score > this.state.topScore) {\n        newState.topScore = this.state.score;//make current score the top score\n      }\n\n      newState.score = 0; //set score back to 0\n\n      //reset clicked flags to false\n      for (let i = 0; i < Img.length; i++) {\n        Img[i].clicked = false;\n      }\n\n      console.log(\"Game Restart\");\n      //console.log(Img)\n    }\n\n    //update state variables\n    this.setState(newState);\n    console.log(\"setting the newState\");\n    this.shuffleIndex();\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"m-3\">\n          <p>Choose a Card to Play</p>\n          <div className=\"text-right\">\n            <span>Score:{this.state.score} High Score:{this.state.topScore}</span>\n          </div>\n        </div>\n\n        <div className=\"container-fluid p-2 col-9 justify-content-center\">\n          {\n            /* Loop through all the items in the static list  */\n            //component did mount\n            this.state.Img.map(item => (\n              <Cards\n                key={item.id}\n                id={item.id}\n                name={item.name}\n                handleClick={this.handleItemClick}\n                image={item.image}\n              />\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}